PLAN:

Goal 1) Get minimal ckan deployment running in Openshift sandbox
- ckan-base
- postgres db
- solr (for searching)

DONE!!!

Goal 2) Add Redis

DONE!!! (have to test)

Goal 3) Add Datastore

DONE!!! (have to test)

Goal 4) Add XLoader (XLoader is replacing DataPusher)

Goal 5) Add gov extensions

----------------------------------------------------------------------------
GOAL 1
----------------------------------------------------------------------------

Start with ckan-docker repo:
https://github.com/ckan/ckan-docker/tree/master

STEPS:
- Go through Dockerfile for each container (if applicable)
- Customize if needed
- Also reference docker-compose.yml
- Build new images and push to quay repos (one repo per application)
- Write Kubernetes config files (YAMLs) to pull those images and configure
the components to run within the Openshift sandbox

KUBERNETES COMPONENTS:
- 3 deployments (--> 3 images, 3 quay repositories)
    - ckan-base
    - postgres db
    - solr
- 3 services
    - ckan (internal service, exposed via route)
    - postgres db (internal service)
    - solr (internal service)
- 3 persistent volume claims
    - ckan-storage (/var/lib/ckan)
    - pg-data (/var/lib/postgresql/data)
    - solr-data (/var/solr)
- 1 config map
    - for ckan
    - (non-sensitive values in .env)
- 2 secrets
    - for ckan
    - for postgres
    - (sensitive values in .env)
- 1 route
    - For external access

ALEMBIC (these localhost values may cause issues later):
/srv/app/src/ckan/ckan/migration/alembic.ini
/srv/app/src/ckan/ckanext/activity/migration/activity/alembic.ini
/srv/app/src/ckan/ckanext/example_database_migrations/migration/example_database_migrations/alembic.ini
/srv/app/src/ckan/ckanext/tracking/migration/tracking/alembic.ini

TRACE:
/usr/local/bin/ckan
/srv/app/src/ckan/ckan/cli/cli.py
/srv/app/src/ckan/ckan/config/middleware/__init__.py
/srv/app/src/ckan/ckan/config/environment.py
/srv/app/src/

SOME NOTES:
- Use https

----------------------------------------------------------------------------
GOAL 2 (Redis)
----------------------------------------------------------------------------

KUBERNETES COMPONENTS:
- 1 Redis deployment (1 image, official one from Docker Hub)
- 1 Redis service
- Modify config map (add Redis env vars)
- Potentially modify secret (add Redis env vars)

----------------------------------------------------------------------------
GOAL 3 (Datastore)
----------------------------------------------------------------------------

This does not introduce any new components, just modifies the ckan-base image and adds some environment variables (modifies configs/secrets).

----------------------------------------------------------------------------
GOAL 4 (XLoader)
----------------------------------------------------------------------------

Referencing the XLoader-replacement branch of the ckan-docker repo.

With Docker, replacing DataPusher with XLoader requires the following changes:
- Modify .env
- Modify docker-compose
- Modify the ckan-base Dockerfile
- Add a new entrypoint script to ckan-base (and delete the old datapusher one)

XLoader runs in its own container (with the ckan-base container as a dependency). The XLoader image is very similar (almost identical) to the ckan-base image.

KUBERNETES COMPONENTS:
- XLoader Deployment
- Modify ckan-base image
- Modify ckan-config (configMap)

ENV VARS:
- beaker.session.secret = ''
- Set up ckan.datapusher.api_token in the CKAN config file
  The xloader equivalent seems to be [ckanext.xloader.api_token]
  This is documented in the ckan-xloader repo

eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJuQXlRaEJ3bGdlX1Brc0lfaG1VcV9VUnV3ZzNKMUR5Yjd6c1dTTkVTNUZnIiwiaWF0IjoxNzYwNjMwMjU1fQ.5oCQcR2gavrGTUh7fJ4XlZ5U1DN5Yt4132AbC7k3C_c

- Set up ckan.xloader.api_token in the CKAN config file
  Is it ckan. or ckanext. ? Who's to say? Are they even the same thing?

- Set up ckanext.xloader.jobs_db.uri in the CKAN config file
  This is documented in the ckan-xloader repo

postgresql://ckandbuser:ckandbpassword@db/ckandb

OTHER ERRORS:

*** Starting uWSGI 2.0.21 (64bit) on [Thu Oct 16 15:41:37 2025] ***
compiled with version: 12.2.1 20220924 on 09 November 2022 12:47:28
os: Linux-5.14.0-570.51.1.el9_6.x86_64 #1 SMP PREEMPT_DYNAMIC Sat Sep 27 01:10:11 EDT 2025
nodename: ckan-xloader-c7cbbb75d-mnt7f
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 8
current working directory: /srv/app
detected binary path: /usr/sbin/uwsgi
cannot setgid() as non-root user