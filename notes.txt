PLAN:

Goal 1) Get minimal ckan deployment running in Openshift sandbox
- ckan-base
- postgres db
- solr (for searching)

DONE!!!

Goal 2) Add Redis

Goal 3) Add Datastore + Dataloader (now XLoader?)

Goal 4) Add gov extensions

----------------------------------------------------------------------------
GOAL 1
----------------------------------------------------------------------------

Start with ckan-docker repo:
https://github.com/ckan/ckan-docker/tree/master

STEPS:
- Go through Dockerfile for each container (if applicable)
- Customize if needed
- Also reference docker-compose.yml
- Build new images and push to quay repos (one repo per application)
- Write Kubernetes config files (YAMLs) to pull those images and configure
the components to run within the Openshift sandbox

KUBERNETES COMPONENTS:
- 3 Deployments (--> 3 images, 3 quay repositories)
    - ckan-base
    - postgres db
    - solr
- 3 services
    - ckan (internal service, exposed via route)
    - postgres db (internal service)
    - solr (internal service)
- 3 persistent volume claims
    - ckan-storage (/var/lib/ckan)
    - pg-data (/var/lib/postgresql/data)
    - solr-data (/var/solr)
- 1 config map
    - for non-sensitive values in .env
- 1 secret
    - for sensitive values in .env
- 1 route
    - For external access

ALEMBIC (these hardcoded localhost values may cause issues later):
/srv/app/src/ckan/ckan/migration/alembic.ini
/srv/app/src/ckan/ckanext/activity/migration/activity/alembic.ini
/srv/app/src/ckan/ckanext/example_database_migrations/migration/example_database_migrations/alembic.ini
/srv/app/src/ckan/ckanext/tracking/migration/tracking/alembic.ini

TRACE:
/usr/local/bin/ckan
/srv/app/src/ckan/ckan/cli/cli.py
/srv/app/src/ckan/ckan/config/middleware/__init__.py
/srv/app/src/ckan/ckan/config/environment.py
/srv/app/src/

SOME NOTES:
- Use https
- 