PLAN:

Goal 1) Get minimal ckan deployment running in Openshift sandbox
- ckan-base
- postgres db
- solr

DONE!!!

Goal 2) Add Redis

DONE!!! (Redis works for queueing jobs for Xloader + Datastore)

Goal 3) Add Datastore

DONE!!!

Goal 4) Add XLoader (XLoader is replacing DataPusher)

DONE!!!

The XLoader extension works by sending background jobs to the ckan-worker pod (this pod has the same image as the ckan webapp, but a different deployment)

Goal 5) Full deployment on government dev namespace (allow scaling of stateful apps using operator)

Goal 6) Add SDI configurations / patches / extensions

Goal 7) Add Gov Canada theme

----------------------------------------------------------------------------
GOAL 1
----------------------------------------------------------------------------

Start with ckan-docker repo:
https://github.com/ckan/ckan-docker/tree/master

STEPS:
- Go through Dockerfile for each container (if applicable)
- Customize if needed
- Also reference docker-compose.yml
- Build new images and push to quay repos (one repo per application)
- Write Kubernetes config files (YAMLs) to pull those images and configure
the components to run within the Openshift sandbox

KUBERNETES COMPONENTS:
- 3 deployments (--> 3 images, 3 quay repositories)
    - ckan-base
    - postgres db
    - solr
- 3 services
    - ckan (internal service, exposed via route)
    - postgres db (internal service)
    - solr (internal service)
- 3 persistent volume claims
    - ckan-storage (/var/lib/ckan)
    - pg-data (/var/lib/postgresql/data)
    - solr-data (/var/solr)
- 1 config map
    - for ckan
    - (non-sensitive values in .env)
- 2 secrets
    - for ckan
    - for postgres
    - (sensitive values in .env)
- 1 route
    - For external access

ALEMBIC (these localhost values may cause issues later):
/srv/app/src/ckan/ckan/migration/alembic.ini
/srv/app/src/ckan/ckanext/activity/migration/activity/alembic.ini
/srv/app/src/ckan/ckanext/example_database_migrations/migration/example_database_migrations/alembic.ini
/srv/app/src/ckan/ckanext/tracking/migration/tracking/alembic.ini

TRACE:
/usr/local/bin/ckan
/srv/app/src/ckan/ckan/cli/cli.py
/srv/app/src/ckan/ckan/config/middleware/__init__.py
/srv/app/src/ckan/ckan/config/environment.py
/srv/app/src/

SOME NOTES:
- Use https

----------------------------------------------------------------------------
GOAL 2 (Redis)
----------------------------------------------------------------------------

KUBERNETES COMPONENTS:
- 1 Redis deployment (1 image, official one from Docker Hub)
- 1 Redis service
- Modify config map (add Redis env vars)
- Potentially modify secret (add Redis env vars)

----------------------------------------------------------------------------
GOAL 3 (Datastore)
----------------------------------------------------------------------------

This does not introduce any new components, just modifies the ckan-base image and adds some environment variables (modifies configs/secrets).

----------------------------------------------------------------------------
GOAL 4 (XLoader)
----------------------------------------------------------------------------

Referencing the XLoader-replacement branch of the ckan-docker repo.

With Docker, replacing DataPusher with XLoader requires the following changes:
- Modify .env
- Modify docker-compose
- Modify the ckan-base Dockerfile
- Add a new entrypoint script to ckan-base (and delete the old datapusher one)

KUBERNETES COMPONENTS:
- Modify ckan-base image
- Add ckan-worker deployment (same image as ckan-base)
- Add ckan-worker-config
- Modify active plugins in configMaps (add xloader and make sure datapusher is gone)

Note that the command to build the ckan-base image should now include an additional build arg for the xloader version (see commands.txt)